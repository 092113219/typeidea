[unix_http_server]
file={{ deploy_path }}/tmp/supervisor.sock   ; the path to the socket file
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)

[supervisord]
logfile={{ deploy_path }}/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile={{ deploy_path }}/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:typeidea]
directory=/home/the5fire/venvs/typeidea-env
command=gunicorn typeidea.wsgi:application -w 4 -b 0.0.0.0:{{ port_prefix }}%(process_num)1d
process_name=%(program_name)s_%(process_num)s ; process_name expr (default %(program_name)s)
numprocs={{ process_count }}                    ; number of processes copies to start (def 1)
autostart=true                ; start at supervisord start (default: true)
autorestart=unexpected        ; when to restart if exited after running (def: unexpected)
stdout_logfile={{ deploy_path }}/tmp/log_typeidea.log        ; stdout log path, NONE for none; default AUTO
environment=typeidea-profile="{{ profile }}"
